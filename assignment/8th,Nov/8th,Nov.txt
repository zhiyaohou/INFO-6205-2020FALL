1. There are 3 buckets of unlimited 5, 10 and 25 cents. If we can pick 5 coins, print all the combinations of  of the coins that can be made.
public static void main(String[] args) {
		int i = 0;
		int j = 0;
		int k = 0;
		int temp=0;
		for (i = 0; i <= 10; i++) {
			for (j = 0; j <= 10; j++) {
				for (k = 0; k <= 10; k++) {
					if (i + j + k == 5) {
						temp++;
						printCoin(i, j, k);
					}
				}
			}
		}
		System.out.println(temp);
	}
 
	public static void printCoin(int i, int j, int k) {
		for (int l = 0; l < i; l++) {
			System.out.print("5cent ");
		}
		for (int l = 0; l < j; l++) {
			System.out.print("10cent ");
		}
		for (int l = 0; l < k; l++) {
			System.out.print("25cent ");
		}
		System.out.println();
	}





 2. I have following coins 1,1,1,1,1,5,5,5,10,10,10,10, 25,25 Can I make a total of 73 cents. if yes how many combinations can I make print them out. Hint This is baqsically generate all sub sets (Binary sequence)
   

 public static void test(int x){
        int sum = 0;
        
        int count = 0;
        
        int times = 0;
        
        int[] a = {1, 5, 10, 25};

       
     
        for (int k = 0; k <= 2; k++) {
            for (int l = 0; l<= 4; l++) {
                for (int m = 0; m <= 3; m++) {
                    for (int n =0; n <= 5; n++){        
                         
                sum = k * a[3] + l * a[2] + m * a[1] + n * a[0];
                    times++;
                    if (sum == x && n >= 0) {
                        count++;
                        System.out.println("number of 25 cent: " + k);
                        System.out.println("number of 10 cent: " + l);
                        System.out.println("number of  5 cent: " + m);
                        System.out.println("number of  1 cent: " + n);
                        System.out.println( );
                            }    
                    }
                }
            }
            
        }
        
        System.out.println("number of combination:" + count);
        
    }

    public static void main(String[] args) {
        long startTime = System.currentTimeMillis();
        test(73);
        
    }

